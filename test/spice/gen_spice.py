import random

def gen_spice(size, filename):
    if size < 2:
        raise ValueError("Size must be at least 2.")

    lines = []
    lines.append(f"* SPICE netlist generated by gen_spice with size {size}")

    # Resistors between nodes
    for i in range(1, size):
        lines.append(f"R{i} N{i} N{i+1} 3.000000e-02")

    # Connect last node to ground
    lines.append(f"R_last N{size} 0 1.000000e-04")

    # Distribute pulsed current sources at every ~3rd node
    pulse_count = 1
    for i in range(1, size + 1):
        if i == 1 or i % 3 == 0:
            delay = random.choice(["0", "1e-10", "1.5e-10", "2e-10", "5e-10"])
            lines.append(f"I{pulse_count} 0 N{i} 9.66773e-06 pulse(9.66773e-06  0.0241693 {delay} 1e-10 1e-10 1e-11 2e-09)")
            pulse_count += 1

    # Capacitors from each node to ground
    for i in range(1, size + 1):
        lines.append(f"C{i} N{i} 0 5.37096111111111e-11")

    # Analysis commands
    lines.append(".tran 1e-11 1e-8")
    mid = size // 2
    lines.append(f".print tran V(N{mid})")

    lines.append(".end")

    with open(filename, 'w') as f:
        f.write("\n".join(lines))


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Generate a SPICE netlist with a linear resistor-capacitor chain.")
    parser.add_argument("size", type=int, help="Number of nodes in the circuit")
    parser.add_argument("filename", type=str, help="Output filename for the SPICE netlist")

    args = parser.parse_args()

    gen_spice(args.size, args.filename)
